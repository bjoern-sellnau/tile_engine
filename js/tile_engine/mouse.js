function newMouse(){	var Mouse = {			down: false,offsetx: 0,offsety: 0,timer: 0,accelx: 0,accely: 0,			clickposx: 0,clickposy: 0,tileEngine:0,vel_x: 0,vel_y:0,view: 0,			init: function(context, tileEngine) {				Mouse.tileEngine = tileEngine;				Mouse.view = tileEngine.view;				$(context)						.mousedown(function(event)  {Mouse.setClickPos(event)})						.mouseup(function()  {Mouse.down = false;})						.mouseout(function() {Mouse.down = false;})						.mousemove(function(event) {Mouse.move(event);});			},			isDown: function() {return Mouse.down;},			setClickPos: function(event) { 				Mouse.tileEngine.active_controller = Mouse;				Mouse.clickposx = event.screenX;				Mouse.clickposy = event.screenY;				Mouse.down = true;			},			move: function(event) {				if (Mouse.isDown()) {					Mouse.timer++;					Mouse.offsetx = event.screenX - Mouse.clickposx;					Mouse.offsety = event.screenY - Mouse.clickposy;					Mouse.setClickPos(event);					Mouse.accelx = Mouse.offsetx / Mouse.timer;					Mouse.accely = Mouse.offsety / Mouse.timer;				} else {					Mouse.reset();				}			},			reset: function() {				Mouse.offsetx = 0;				Mouse.offsety = 0;				Mouse.accelx = 0;				Mouse.accely = 0;				Mouse.timer = 0;			},			accellerate: function(){				var thrust = 0.96				Mouse.vel_x = (Mouse.vel_x + (this.accelx / 10)) * thrust;				Mouse.vel_y = (Mouse.vel_y + (this.accely / 10)) * thrust;			},			update: function(){				Mouse.view.x = Mouse.view.tileEngine.renderCircular ? (Mouse.view.x-(Mouse.vel_x))%Mouse.view.tileEngine.mapWidth:(Mouse.view.x-(Mouse.vel_x))				Mouse.view.y = Mouse.view.tileEngine.renderCircular ? (Mouse.view.y-(Mouse.vel_y))%Mouse.view.tileEngine.mapHeight:(Mouse.view.y-(Mouse.vel_y))				Mouse.view.viewWidth = Mouse.view.x + Mouse.view.tileEngine.width;				Mouse.view.viewHeight = Mouse.view.y + Mouse.view.tileEngine.height;								var rebound = 0.1;				if(!Mouse.tileEngine.renderCircular){					if(Mouse.view.x < 0 && !this.isDown())						Mouse.vel_x -= rebound;					if(Mouse.view.y < 0 && !this.isDown()) 						Mouse.vel_y -= rebound;					if(Mouse.view.viewWidth > Mouse.tileEngine.mapWidth && !this.isDown()) 						Mouse.vel_x += rebound;					if(Mouse.view.viewHeight > Mouse.tileEngine.mapHeight && !this.isDown()) 						Mouse.vel_y += rebound;				}								this.reset();			}	};	return Mouse;}